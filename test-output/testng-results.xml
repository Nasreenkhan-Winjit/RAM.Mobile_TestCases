<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="99064" started-at="2020-06-26T13:52:15Z" finished-at="2020-06-26T13:53:54Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="99064" started-at="2020-06-26T13:52:15Z" finished-at="2020-06-26T13:53:54Z">
      <class name="RamTestCases.Login">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeSuite" is-config="true" duration-ms="511" started-at="2020-06-26T19:22:14Z" finished-at="2020-06-26T19:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeClass" is-config="true" duration-ms="42926" started-at="2020-06-26T19:22:15Z" finished-at="2020-06-26T19:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-06-26T19:22:58Z" finished-at="2020-06-26T19:22:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.AtTheHub() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AtTheHub()[pri:0, instance:RamTestCases.Login@d2e7d9]" name="AtTheHub" duration-ms="7871" started-at="2020-06-26T19:22:58Z" description="To verify home screen" finished-at="2020-06-26T19:23:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AtTheHub -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="946" started-at="2020-06-26T19:23:06Z" finished-at="2020-06-26T19:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AtTheHub status=SUCCESS method=Login.AtTheHub()[pri:0, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:07Z" finished-at="2020-06-26T19:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.LoginInvalidEnter12DigitId() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginInvalidEnter12DigitId()[pri:1, instance:RamTestCases.Login@d2e7d9]" name="LoginInvalidEnter12DigitId" duration-ms="2601" started-at="2020-06-26T19:23:07Z" description="validate Login by entering 12" finished-at="2020-06-26T19:23:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginInvalidEnter12DigitId -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="181" started-at="2020-06-26T19:23:09Z" finished-at="2020-06-26T19:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginInvalidEnter12DigitId status=SUCCESS method=Login.LoginInvalidEnter12DigitId()[pri:1, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-26T19:23:09Z" finished-at="2020-06-26T19:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.LoginValidDriverID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginValidDriverID()[pri:2, instance:RamTestCases.Login@d2e7d9]" name="LoginValidDriverID" duration-ms="2147" started-at="2020-06-26T19:23:09Z" description="validate Login with valid ID" finished-at="2020-06-26T19:23:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginValidDriverID -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="175" started-at="2020-06-26T19:23:12Z" finished-at="2020-06-26T19:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginValidDriverID status=SUCCESS method=Login.LoginValidDriverID()[pri:2, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:12Z" finished-at="2020-06-26T19:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.LoginInValidCrewMemberID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginInValidCrewMemberID()[pri:3, instance:RamTestCases.Login@d2e7d9]" name="LoginInValidCrewMemberID" duration-ms="4059" started-at="2020-06-26T19:23:12Z" description="validate AddcrewMember with invalid ID" finished-at="2020-06-26T19:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginInValidCrewMemberID -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="186" started-at="2020-06-26T19:23:16Z" finished-at="2020-06-26T19:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginInValidCrewMemberID status=SUCCESS method=Login.LoginInValidCrewMemberID()[pri:3, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-26T19:23:16Z" finished-at="2020-06-26T19:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.LoginValidCrewMemberID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginValidCrewMemberID()[pri:4, instance:RamTestCases.Login@d2e7d9]" name="LoginValidCrewMemberID" duration-ms="2647" started-at="2020-06-26T19:23:16Z" description="validate AddcrewMember with valid ID" finished-at="2020-06-26T19:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginValidCrewMemberID -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="179" started-at="2020-06-26T19:23:19Z" finished-at="2020-06-26T19:23:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginValidCrewMemberID status=SUCCESS method=Login.LoginValidCrewMemberID()[pri:4, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:19Z" finished-at="2020-06-26T19:23:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.InvalidProceedToScan() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidProceedToScan()[pri:5, instance:RamTestCases.Login@d2e7d9]" name="InvalidProceedToScan" duration-ms="3175" started-at="2020-06-26T19:23:19Z" description="Proceed without entering id" finished-at="2020-06-26T19:23:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidProceedToScan -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="177" started-at="2020-06-26T19:23:22Z" finished-at="2020-06-26T19:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidProceedToScan status=SUCCESS method=Login.InvalidProceedToScan()[pri:5, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-26T19:23:22Z" finished-at="2020-06-26T19:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.ValidProceedToScan() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidProceedToScan()[pri:6, instance:RamTestCases.Login@d2e7d9]" name="ValidProceedToScan" duration-ms="1155" started-at="2020-06-26T19:23:22Z" description="Validate Dont have scan ID" finished-at="2020-06-26T19:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidProceedToScan -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="226" started-at="2020-06-26T19:23:23Z" finished-at="2020-06-26T19:23:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidProceedToScan status=SUCCESS method=Login.ValidProceedToScan()[pri:6, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="InvalidManifestID()[pri:7, instance:RamTestCases.Login@d2e7d9]" name="InvalidManifestID" duration-ms="3155" started-at="2020-06-26T19:23:24Z" description="EnterMannually InvalidManifest ID" finished-at="2020-06-26T19:23:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidManifestID -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:24Z" finished-at="2020-06-26T19:23:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.InvalidManifestID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="174" started-at="2020-06-26T19:23:27Z" finished-at="2020-06-26T19:23:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidManifestID status=SUCCESS method=Login.InvalidManifestID()[pri:7, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:27Z" finished-at="2020-06-26T19:23:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.ValidManifestID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidManifestID()[pri:8, instance:RamTestCases.Login@d2e7d9]" name="ValidManifestID" duration-ms="6082" started-at="2020-06-26T19:23:27Z" description="EnterMannually InvalidManifest ID" finished-at="2020-06-26T19:23:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidManifestID -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="207" started-at="2020-06-26T19:23:33Z" finished-at="2020-06-26T19:23:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidManifestID status=SUCCESS method=Login.ValidManifestID()[pri:8, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="InvalidConfirmNoOfParcel()[pri:9, instance:RamTestCases.Login@d2e7d9]" name="InvalidConfirmNoOfParcel" duration-ms="2542" started-at="2020-06-26T19:23:33Z" description="ConfirmNo.Of parcel Invalid case" finished-at="2020-06-26T19:23:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidConfirmNoOfParcel -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:33Z" finished-at="2020-06-26T19:23:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.InvalidConfirmNoOfParcel() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="183" started-at="2020-06-26T19:23:36Z" finished-at="2020-06-26T19:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidConfirmNoOfParcel status=SUCCESS method=Login.InvalidConfirmNoOfParcel()[pri:9, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:36Z" finished-at="2020-06-26T19:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.ValidConfirmNoOfParcel() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidConfirmNoOfParcel()[pri:10, instance:RamTestCases.Login@d2e7d9]" name="ValidConfirmNoOfParcel" duration-ms="2205" started-at="2020-06-26T19:23:36Z" description="ConfirmNo.Of parcel  valid case" finished-at="2020-06-26T19:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidConfirmNoOfParcel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="192" started-at="2020-06-26T19:23:38Z" finished-at="2020-06-26T19:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidConfirmNoOfParcel status=SUCCESS method=Login.ValidConfirmNoOfParcel()[pri:10, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="InValidVehicleID()[pri:11, instance:RamTestCases.Login@d2e7d9]" name="InValidVehicleID" duration-ms="3173" started-at="2020-06-26T19:23:38Z" description="InValidVehicle No." finished-at="2020-06-26T19:23:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InValidVehicleID -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:38Z" finished-at="2020-06-26T19:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.InValidVehicleID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="188" started-at="2020-06-26T19:23:41Z" finished-at="2020-06-26T19:23:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InValidVehicleID status=SUCCESS method=Login.InValidVehicleID()[pri:11, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ValidVehicleID()[pri:12, instance:RamTestCases.Login@d2e7d9]" name="ValidVehicleID" duration-ms="2187" started-at="2020-06-26T19:23:42Z" description="Enter Valid Vehicle No." finished-at="2020-06-26T19:23:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidVehicleID -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:42Z" finished-at="2020-06-26T19:23:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.ValidVehicleID() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="157" started-at="2020-06-26T19:23:44Z" finished-at="2020-06-26T19:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidVehicleID status=SUCCESS method=Login.ValidVehicleID()[pri:12, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-26T19:23:44Z" finished-at="2020-06-26T19:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.InvalidOdoMeterReading() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidOdoMeterReading()[pri:13, instance:RamTestCases.Login@d2e7d9]" name="InvalidOdoMeterReading" duration-ms="3716" started-at="2020-06-26T19:23:44Z" description="Invalid Odo reading" finished-at="2020-06-26T19:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidOdoMeterReading -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="146" started-at="2020-06-26T19:23:48Z" finished-at="2020-06-26T19:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidOdoMeterReading status=SUCCESS method=Login.InvalidOdoMeterReading()[pri:13, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ValidOdoMeterReading()[pri:14, instance:RamTestCases.Login@d2e7d9]" name="ValidOdoMeterReading" duration-ms="2369" started-at="2020-06-26T19:23:48Z" description="Valid Odometer reading" finished-at="2020-06-26T19:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidOdoMeterReading -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:48Z" finished-at="2020-06-26T19:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.ValidOdoMeterReading() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="142" started-at="2020-06-26T19:23:50Z" finished-at="2020-06-26T19:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidOdoMeterReading status=SUCCESS method=Login.ValidOdoMeterReading()[pri:14, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-06-26T19:23:50Z" finished-at="2020-06-26T19:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RamTestCases.Login.TapOnOnTheRoad() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TapOnOnTheRoad()[pri:15, instance:RamTestCases.Login@d2e7d9]" name="TapOnOnTheRoad" duration-ms="3378" started-at="2020-06-26T19:23:50Z" description="Click on On the road Icon" finished-at="2020-06-26T19:23:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TapOnOnTheRoad -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:RamTestCases.Login@d2e7d9]" name="afterMethod" is-config="true" duration-ms="146" started-at="2020-06-26T19:23:54Z" finished-at="2020-06-26T19:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TapOnOnTheRoad status=SUCCESS method=Login.TapOnOnTheRoad()[pri:15, instance:RamTestCases.Login@d2e7d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="End()[pri:0, instance:RamTestCases.Login@d2e7d9]" name="End" is-config="true" duration-ms="0" started-at="2020-06-26T19:23:54Z" finished-at="2020-06-26T19:23:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End -->
      </class> <!-- RamTestCases.Login -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
